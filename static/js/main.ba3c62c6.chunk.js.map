{"version":3,"sources":["components/Header/header.js","actions/index.js","reducers/tasks.js","constants/index.js","reducers/index.js","config/store.js","components/AllItems/all-item.js","components/Add-item/add-item.js","components/Todo/todo.js","components/FilterLink/filter-link.js","components/Footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","name","CHANGE_STATE_PROP","PUSH_STATE_PROP","SPLICE_STATE_PROP","SAVE_EDITED_STATE_PROP","changeStateProp","prop","value","reducer","store","dispatch","type","toUpperCase","state","saveEditedStateProp","index","itemProp","REDUCER","initialState","tasks","id","isEdit","isChecked","title","filterType","rootReducer","combineReducers","arguments","length","undefined","action","update","Object","defineProperty","$set","$unshift","$splice","item","newItem","persistConfig","key","storage","persistedReducer","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistStore","AllItems","_useState","useState","_useState2","slicedToArray","newValue","setValue","_useState3","_useState4","user","setUser","allItems","useSelector","useEffect","_fetchUser","asyncToGenerator","regenerator_default","mark","_callee","response","data","_data$results","userItem","wrap","_context","prev","next","fetch","sent","json","results","stop","apply","this","fetchUser","deleteItem","handleEdit","find","element","i","checkedItem","ind","renderItem","className","onChange","event","target","onClick","Fragment","index_es","icon","faTrashAlt","defaultChecked","htmlFor","faEdit","map","concat","first","last","AddItem","Math","random","setItem","isError","setError","handleInput","objectSpread","Todo","memo","setItems","Add_item_add_item","AllItems_all_item","FilterLink","buttonType","checked","faDotCircle","Footer","FilterLink_filter_link","App","Header_header","Todo_todo","Footer_footer","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba3c62c6.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = (props) => {\n    return (\n        <header>\n            <h1>{props.name}</h1>\n        </header>\n    );\n}\n\nexport default Header;","import store from \"../config/store\";\n\nexport const CHANGE_STATE_PROP = '_CHANGE_STATE_PROP'\nexport const PUSH_STATE_PROP = '_PUSH_STATE_PROP'\nexport const SPLICE_STATE_PROP = '_SPLICE_STATE_PROP'\nexport const SAVE_EDITED_STATE_PROP = '_SAVE_EDITED_STATE_PROP'\n\nexport function changeStateProp (prop, value, reducer) {\n    return store.dispatch({\n            type: reducer.toUpperCase() + CHANGE_STATE_PROP,\n            state: {\n                prop: prop,\n                value: value\n            }\n        })\n}\n\nexport function pushStateProp (prop, value, reducer) {\n    return store.dispatch({\n            type: reducer.toUpperCase() + PUSH_STATE_PROP,\n            state: {\n                prop: prop,\n                value: value\n            }\n        })\n}\n\nexport function spliceStateProp (prop, value, reducer) {\n    return store.dispatch({\n        type: reducer.toUpperCase() + SPLICE_STATE_PROP,\n        state: {\n            prop: prop,\n            value: value\n        }\n    })\n}\n\nexport function saveEditedStateProp (prop, value, index, itemProp, reducer) {\n    return store.dispatch({\n        type: reducer.toUpperCase() + SAVE_EDITED_STATE_PROP,\n        state: {\n            prop: prop,\n            value: value,\n            index: index,\n            itemProp: itemProp\n        }\n    })\n}\n","import { TASKS } from '../constants/index'\nimport update from 'immutability-helper'\nimport { CHANGE_STATE_PROP, PUSH_STATE_PROP, SPLICE_STATE_PROP, SAVE_EDITED_STATE_PROP } from '../actions/'\n\nconst REDUCER = 'TASKS'\n\nconst initialState = {\n    tasks: TASKS,\n    title: '',\n    filterType: 'All'\n}\n\nexport default function tasks (state = initialState, action) {\n    let value = action.state && action.state.value ? action.state.value : ''\n    let prop = action.state && action.state.prop ? action.state.prop : ''\n\n    switch (action.type) {\n        case REDUCER + CHANGE_STATE_PROP:\n            return update(state, {\n                [prop]: {\n                    $set: value\n                }\n            })\n        case REDUCER + PUSH_STATE_PROP:\n            return update(state, {\n                [prop]: { $unshift: [value] },\n            })\n        case REDUCER + SPLICE_STATE_PROP:\n            return update(state, {\n                [prop]: { $splice: [[value, 1]] },\n            })\n        case REDUCER + SAVE_EDITED_STATE_PROP:\n            let index = action.state.index\n            let itemProp = action.state.itemProp\n            let item = state[prop][index]\n            let newItem = update(item, {\n                [itemProp]: {$set: value }\n            })\n\n            return update(state, {\n                [prop]: { $splice: [[index, 1, newItem]] },\n            })\n\n        default:\n            return state\n    }\n}\n","export const TASKS = [\n    {\n        id: 1,\n        value: 'Learn JS',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 2,\n        value: 'Learn Drupal',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 3,\n        value: 'do nothing',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 4,\n        value: 'Learn PHP',\n        isEdit: false,\n        isChecked: false,\n    },\n]","import { combineReducers } from 'redux'\nimport tasks from './tasks'\n\nconst rootReducer = combineReducers({\n    tasks: tasks,\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from '../reducers'\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n)\nexport const persistor = persistStore(store)\n\nexport default store","import React, {useState, useEffect} from 'react';\nimport './all-item.scss';\nimport { useSelector } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport store from \"../../config/store\";\nimport {spliceStateProp, saveEditedStateProp} from '../../actions'\n\nconst AllItems = () => {\n\n  const [newValue, setValue] = useState('')\n  const [user, setUser] = useState()\n  const allItems = useSelector(state => state.tasks.tasks)\n  const filterType = useSelector(state => state.tasks.filterType)\n\n  useEffect(() => {\n    async function fetchUser() {\n      const response = await fetch('https://api.randomuser.me/')\n      const data = await response.json()\n      const [userItem] = data.results\n      setUser(userItem)\n    }\n\n    fetchUser()\n  }, [allItems.length])\n\n  const deleteItem = (index) => {\n    spliceStateProp('tasks', index, 'TASKS')\n  }\n\n  const handleEdit = (item, index, newValue) => {\n    allItems.find((element, i) => {\n      if (i === index) {\n        element.isEdit = !element.isEdit\n        setValue(item.value)\n        if (newValue) {\n          saveEditedStateProp('tasks', newValue, index, 'value', 'TASKS')\n        }\n      }\n    })\n  }\n\n  const checkedItem = (item, index) => {\n    allItems.find((i, ind) => {\n      if (ind === index) {\n        saveEditedStateProp('tasks', !item.isChecked, index, 'isChecked', 'TASKS')\n      }\n    })\n  }\n\n  const renderItem = (item, index) => {\n    return (\n      <div key={index} className={'item'}>\n        <div className={'item-left-cont'}>\n          <span className={item.isChecked ? 'number checked' : 'number'}>{index + 1}</span>\n          {!item.isEdit\n            ? <p className={item.isChecked ? 'checked' : ''}>{item.value}</p>\n            : <input type=\"text\" value={newValue} onChange={(event) => setValue(event.target.value)}/>\n          }\n        </div>\n        {!item.isEdit\n          ? <>\n            {item.isChecked\n              ? <div className={\"icon-cont-small\"}>\n                <span className=\"remove-item\" onClick={() => deleteItem(index)}>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </span>\n                <div className=\"switch\">\n                  <input type=\"checkbox\" defaultChecked={item.isChecked ? 'checked' : ''}\n                         onClick={() => checkedItem(item, index)} id={\"isCompleted-\" + index} className={\"switch-input\"} />\n                  <label htmlFor={\"isCompleted-\" + index} className=\"switch-label\">Switch</label>\n                </div>\n              </div>\n              : <div className={\"icon-cont\"}>\n                <span className={'edit'} onClick={() => handleEdit(item, index)}>\n                  <FontAwesomeIcon icon={faEdit}/>\n                </span>\n                <span className=\"remove-item\" onClick={() => deleteItem(index)}>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </span>\n                <div className=\"switch\">\n                  <input type=\"checkbox\" defaultChecked={item.isChecked ? 'checked' : ''}\n                         onClick={() => checkedItem(item, index)} id={\"isCompleted-\" + index} className={\"switch-input\"} />\n                  <label htmlFor={\"isCompleted-\" + index} className=\"switch-label\">Switch</label>\n                </div>\n              </div>\n            }\n          </>\n          : <button className=\"save\" onClick={() => handleEdit(item, index, newValue)}>Save</button>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className={'items-container'}>\n      {allItems && allItems.map((item, index) => {\n        switch (filterType) {\n          case 'Active':\n            if (!item.isChecked) return renderItem(item, index)\n            break\n          case 'Completed':\n            if (item.isChecked) return renderItem(item, index)\n            break\n          default:\n            return renderItem(item, index)\n        }\n      })}\n      <p>{(user) ? `${user.name.first} ${user.name.last}` : ''}</p>\n    </div>\n  );\n}\nexport default AllItems;","import React, { useState } from 'react';\nimport './add-item.scss';\nimport { changeStateProp, pushStateProp } from '../../actions'\n\nconst AddItem = () => {\n\n    // states\n    const [item, setItem] = useState({\n        isEdit: false,\n        isChecked: false,\n        value: '',\n        id: Math.random()\n    })\n\n    const [isError, setError] = useState(false)\n\n    const handleInput = (name, value) => {\n        if (item.value) {\n            setError(false)\n        }\n        setItem({\n            ...item, [name]: value\n        })\n    }\n\n    const onClickButton = () => {\n        if (item.value) {\n            handleInput('value', '');\n\n            pushStateProp('tasks', item, 'TASKS')\n            changeStateProp('title', item.value, 'TASKS')\n        } else  {\n            setError(true)\n        }\n    }\n\n    return (\n        <div className={'add-item'}>\n            <div>\n                <span>New item: </span>\n                <input type=\"text\" className={isError ? 'error' : ''} onChange={(event) => handleInput('value', event.target.value)} value={item.value}/>\n            </div>\n            <button className={'green-button'} onClick={onClickButton}>\n                Add +\n            </button>\n        </div>\n\n    );\n}\n\nexport default AddItem;","import React, { useState, memo, useEffect } from 'react';\nimport { useSelector } from 'react-redux'\nimport './todo.css';\nimport AllItems from '../AllItems/all-item'\nimport AddItem from '../Add-item/add-item'\n\nconst Todo = memo(() => {\n    const data = useSelector(state => state.tasks.tasks)\n    const [items, setItems] = useState([])\n\n    useEffect(() => {\n        setItems(data)\n    }, [])\n\n    return (\n        <div className={\"toto-wrapper\"}>\n            <AddItem  setItems={setItems} />\n            <AllItems setItems={setItems} />\n        </div>\n    )\n})\n\nexport default Todo;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './filter-link.scss'\nimport { changeStateProp } from '../../actions/'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst FilterLink = (props) => {\n    const filterType = useSelector(state => state.tasks.filterType)\n    const isChecked = filterType === props.buttonType\n\n    const checkPoint = () => {\n        changeStateProp('filterType', props.buttonType, 'TASKS')\n    }\n\n    return (\n        <div className={\"filter-button\"}>\n            <input onChange={checkPoint} checked={isChecked} type=\"radio\" className=\"filter-point\" id={props.buttonType}/>\n            <label htmlFor={props.buttonType} className={isChecked ? \"filter-item-label active\" : \"filter-item-label\"}><FontAwesomeIcon icon={faDotCircle}/>{props.buttonType}</label>\n        </div>\n    )\n}\n\nexport default FilterLink","import React from 'react'\nimport FilterLink from '../FilterLink/filter-link'\nimport './footer.scss'\n\nconst Footer = () => {\n\n    return (\n        <footer className={\"footer\"}>\n            <span>Show:</span>\n          <div className=\"buttons-container\">\n            <FilterLink buttonType={'All'} />\n            <FilterLink buttonType={'Active'} />\n            <FilterLink buttonType={'Completed'} />\n          </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport Header from './components/Header/header';\nimport Todo from './components/Todo/todo';\nimport  Footer from './components/Footer/footer'\nimport './App.css';\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <Header name={\"ToDo On Every Day\"}/>\n      <Todo />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { store } from './config/store'\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}