{"version":3,"sources":["constants/index.js","actions/index.js","reducers/tasks.js","reducers/index.js","config/store.js","components/Header/header.js","services/api.js","services/course.js","components/AllItems/all-item.js","components/Add-item/add-item.js","components/FilterLink/filter-link.js","components/FiltersBlock/filters-block.js","components/Todo/todo.js","services/people.js","components/Footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["SHOP_LIST","id","value","isEdit","isChecked","price","NaN","TranslateTexts","language","todoTitle","shoppingListTitle","addItemBtn","addItemLabel","placeholderName","placeholderPrice","allFilter","activeFilter","completedFilter","totalPriceLabel","todoTextLink","shoppingListTextLink","saveItemBtn","CHANGE_STATE_PROP","PUSH_STATE_PROP","SAVE_EDITED_STATE_PROP","SPLICE_STATE_PROP","changeStateProp","prop","reducer","store","dispatch","type","toUpperCase","state","pushStateProp","spliceStateProp","saveEditedStateProp","index","itemProp","REDUCER","initialState","tasks","filterType","shoppingList","rootReducer","combineReducers","arguments","length","undefined","action","update","Object","defineProperty","$set","$unshift","$splice","item","newItem","persistConfig","key","storage","persistedReducer","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Header","persistStore","props","react_default","a","createElement","name","className","onClick","event","target","tagName","textContent","classList","contains","add","previousElementSibling","nextElementSibling","remove","changeLanguage","instance","axios","create","baseURL","responseType","courseInstance","getCourses","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","get","sent","abrupt","data","t0","stop","apply","this","AllItems","TranslatedTexts","useSelector","_useState","useState","_useState2","slicedToArray","newValue","setValue","_useState3","_useState4","newPrice","setPrice","_useState5","_useState6","courses","setCourses","_useState7","_useState8","selCourse","setSelCourse","_useState9","isActive","_useState10","isActiveModuleItemMenu","setIsActiveModuleItemMenu","getCoursesList","coursesList","unshift","ccy","base_ccy","buy","sale","useEffect","storePathCall","allItems","deleteItem","handleEdit","forEach","element","i","checkedItem","ind","totalPrice","course","totalResult","itemPrice","parseFloat","equal","find","toFixed","renderMenuItems","index_es","icon","faEdit","faTrashAlt","defaultChecked","htmlFor","renderItem","Fragment","onChange","concat","innerWidth","itemMenuClick","faEllipsisV","map","AddItem","itemObj","Math","random","setItem","isError","setError","handleInput","objectSpread2","placeholder","isNaN","FilterLink","buttonType","checked","faDotCircle","buttonName","FiltersBlock","FilterLink_filter_link","Todo","memo","Add_item_add_item","FiltersBlock_filters_block","AllItems_all_item","react_router_dom","to","people","getPeople","results","Footer","users","setUsers","getUsers","usersList","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","skin_color","mass","App","basename","react_router","exact","path","Header_header","Todo_todo","Footer_footer","Boolean","location","hostname","match","ReactDOM","render","react_redux_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b427dcb.chunk.js","sourcesContent":["export const TASKS = [\n    {\n        id: 1,\n        value: 'Learn JS',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 2,\n        value: 'Learn Drupal',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 3,\n        value: 'do nothing',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 4,\n        value: 'Learn PHP',\n        isEdit: false,\n        isChecked: false,\n    },\n]\n\nexport const SHOP_LIST = [\n  {\n    id: 1,\n    value: 'Test Shop',\n    isEdit: false,\n    isChecked: false,\n    price: NaN\n  }\n]\n\nexport const TranslateTexts = (language) => {\n  switch (language) {\n    case 'UA' :\n      const TRANSLATES_UA = {\n        todoTitle: 'Збірник Справ На Кожен День',\n        shoppingListTitle: 'Збірник омріяних покупок',\n        addItemBtn: 'Ок +',\n        addItemLabel: 'Новий пункт',\n        placeholderName: 'Назва',\n        placeholderPrice: 'Ціна',\n        allFilter: 'Всі',\n        activeFilter: 'Активні',\n        completedFilter: 'Виконані',\n        totalPriceLabel: 'Всього',\n        todoTextLink: 'Збірник Справ',\n        shoppingListTextLink: 'Збірник Покупків',\n        saveItemBtn: 'Ok'\n      }\n      return TRANSLATES_UA\n    default :\n      const TRANSLATES_EN = {\n        todoTitle: 'ToDo On Every Day',\n        shoppingListTitle: 'Shopping List On Every Day',\n        addItemBtn: 'Add +',\n        addItemLabel: 'New Item',\n        placeholderName: 'Name',\n        placeholderPrice: 'Price',\n        allFilter: 'All',\n        activeFilter: 'Active',\n        completedFilter: 'Completed',\n        totalPriceLabel: 'Total',\n        todoTextLink: 'ToDo List',\n        shoppingListTextLink: 'ShoppingList',\n        saveItemBtn: 'Save'\n      }\n      return TRANSLATES_EN\n  }\n}\n","import store from \"../config/store\"\nexport const CHANGE_STATE_PROP = '_CHANGE_STATE_PROP'\nexport const PUSH_STATE_PROP = '_PUSH_STATE_PROP'\nexport const SAVE_EDITED_STATE_PROP = '_SAVE_EDITED_STATE_PROP'\nexport const SPLICE_STATE_PROP = '_SPLICE_STATE_PROP'\n\nexport function changeStateProp (prop, value, reducer) {\n  return store.dispatch({\n            type: reducer.toUpperCase() + CHANGE_STATE_PROP,\n            state: {\n                prop: prop,\n                value: value\n            }\n        })\n}\n\nexport function pushStateProp (prop, value, reducer) {\n    return store.dispatch({\n            type: reducer.toUpperCase() + PUSH_STATE_PROP,\n            state: {\n                prop: prop,\n                value: value\n            }\n        })\n}\n\nexport function spliceStateProp (prop, value, reducer) {\n    return store.dispatch({\n        type: reducer.toUpperCase() + SPLICE_STATE_PROP,\n        state: {\n            prop: prop,\n            value: value\n        }\n    })\n}\n\nexport function saveEditedStateProp (prop, value, index, itemProp, reducer) {\n    return store.dispatch({\n        type: reducer.toUpperCase() + SAVE_EDITED_STATE_PROP,\n        state: {\n            prop: prop,\n            value: value,\n            index: index,\n            itemProp: itemProp\n        }\n    })\n}\n","import {TASKS, SHOP_LIST} from '../constants/index'\nimport update from 'immutability-helper'\nimport {CHANGE_STATE_PROP, PUSH_STATE_PROP, SPLICE_STATE_PROP, SAVE_EDITED_STATE_PROP} from '../actions/'\n\nconst REDUCER = 'TASKS'\n\nconst initialState = {\n  tasks: TASKS,\n  filterType: 'All',\n  shoppingList : SHOP_LIST,\n  language: 'EN'\n}\n\nexport default function tasks(state = initialState, action) {\n  let value = action.state && action.state.value ? action.state.value : ''\n  let prop = action.state && action.state.prop ? action.state.prop : ''\n\n  switch (action.type) {\n    case REDUCER + CHANGE_STATE_PROP:\n      return update(state, {\n        [prop]: {\n          $set: value\n        }\n      })\n    case REDUCER + PUSH_STATE_PROP:\n      return update(state, {\n        [prop]: {$unshift: [value]},\n      })\n    case REDUCER + SPLICE_STATE_PROP:\n      return update(state, {\n        [prop]: {$splice: [[value, 1]]},\n      })\n    case REDUCER + SAVE_EDITED_STATE_PROP:\n      let index = action.state.index\n      let itemProp = action.state.itemProp\n      let item = state[prop][index]\n      let newItem = update(item, {\n        [itemProp]: {$set: value}\n      })\n\n      return update(state, {\n        [prop]: {$splice: [[index, 1, newItem]]},\n      })\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport tasks from './tasks'\n\nconst rootReducer = combineReducers({\n    tasks: tasks,\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from '../reducers'\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n\nexport const persistor = persistStore(store)","import React from 'react'\nimport './header.scss'\nimport store from \"../../config/store\"\nimport { changeStateProp } from \"../../actions\"\n\nconst Header = (props) => {\n  const changeLanguage = (event) => {\n    if (event.target.tagName === 'LI') {\n      changeStateProp('language', event.target.textContent, 'TASKS')\n      if (!event.target.classList.contains('active')) {\n        event.target.classList.add('active')\n        let otherEl = event.target.previousElementSibling ? event.target.previousElementSibling : event.target.nextElementSibling\n        otherEl.classList.remove('active')\n      }\n    }\n  }\n\n  return (\n    <header>\n      <h1>{props.name}</h1>\n      <div className=\"language-switch\">\n        <ul onClick={(event) => changeLanguage(event)}>\n          <li className={'active'}>EN</li>\n          <li>UA</li>\n        </ul>\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://swapi.co/api/',\n  responseType: 'json'\n})\n\nconst courseInstance = axios.create({\n  baseURL: 'https://api.privatbank.ua/p24api/',\n  responseType: 'json'\n})\n\nexport {courseInstance, instance}\n","import { courseInstance } from './api'\n\nconst getCourses = async () => {\n  try {\n    const res = await courseInstance.get('pubinfo?exchange&json&coursid=11')\n    return res.data\n  } catch (error) {\n    return error\n  }\n}\n\nexport default getCourses\n","import React, {useEffect, useState} from 'react'\nimport './all-item.scss'\nimport { useSelector } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrashAlt, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport { spliceStateProp, saveEditedStateProp } from '../../actions'\nimport getCourses from '../../services/course'\nimport { TranslateTexts } from \"../../constants\";\n\nconst AllItems = (props) => {\n\n  const TranslatedTexts = TranslateTexts(useSelector((state) => state.tasks.language))\n  const [newValue, setValue] = useState('')\n  const [newPrice, setPrice] = useState(0)\n  const [courses, setCourses] = useState([])\n  const [selCourse, setSelCourse] = useState('UAH')\n  const [isActiveModuleItemMenu, setIsActiveModuleItemMenu] = useState({isActive: false, index: NaN})\n\n  let getCoursesList = async () => {\n    let coursesList = await getCourses()\n    coursesList.unshift({\n      ccy: 'UAH',\n      base_ccy: 'UAH',\n      buy: '1',\n      sale: '1'\n    })\n    setCourses(coursesList)\n  }\n\n  useEffect(() => {\n    if (props.type !== 'standard') {\n      getCoursesList()\n    }\n  }, [props.type])\n\n  let storePathCall = props.type === 'standard' ? state => state.tasks.tasks\n    : state => state.tasks.shoppingList\n  const allItems = useSelector(storePathCall)\n  const filterType = useSelector(state => state.tasks.filterType)\n\n  const deleteItem = (index) => {\n    if (props.type === 'standard') {\n      spliceStateProp('tasks', index, 'TASKS')\n    } else {\n      spliceStateProp('shoppingList', index, 'TASKS')\n    }\n  }\n\n  const handleEdit = (item, index, newValue) => {\n    allItems.forEach((element, i) => {\n      if (i === index) {\n        element.isEdit = !element.isEdit\n        setValue(item.value)\n        setPrice(item.price)\n        if (newValue && props.type === 'standard') {\n          saveEditedStateProp('tasks', newValue, index, 'value', 'TASKS')\n        } else if (newValue && props.type !== 'standard') {\n          saveEditedStateProp('shoppingList', newValue, index, 'value', 'TASKS')\n        }\n\n        if (newPrice) {\n          saveEditedStateProp('shoppingList', newPrice, index, 'price', 'TASKS')\n        }\n      }\n    })\n  }\n\n  const checkedItem = (item, index) => {\n    allItems.forEach((i, ind) => {\n      if (ind === index) {\n\n        if (props.type === 'standard') {\n          saveEditedStateProp('tasks', !item.isChecked, index, 'isChecked', 'TASKS')\n        } else  {\n          saveEditedStateProp('shoppingList', !item.isChecked, index, 'isChecked', 'TASKS')\n        }\n      }\n    })\n  }\n\n  const itemMenuClick = (index) => {\n    setIsActiveModuleItemMenu({isActive: !isActiveModuleItemMenu.isActive, index: index})\n  }\n\n  const totalPrice = (course = 'UAH') => {\n    let totalResult = 0\n    allItems.forEach((item) => {\n      let itemPrice = item.price ? item.price : 0\n      switch (filterType) {\n        case 'Active':\n          if (!item.isChecked) {\n            totalResult += parseFloat(itemPrice)\n          }\n          break\n        case 'Completed':\n          if (item.isChecked) {\n            totalResult += parseFloat(itemPrice)\n          }\n          break\n        default:\n          totalResult += parseFloat(itemPrice)\n      }\n    })\n\n    if (courses.length && course) {\n      let equal = parseFloat(courses.find((item) => item.ccy === course).buy)\n      totalResult = (totalResult / equal).toFixed(2)\n\n      if (course !== selCourse) {\n        setSelCourse(course)\n      }\n    }\n\n    return totalResult\n  }\n\n  const renderMenuItems = (item, index) => {\n    return (\n      <div className={\"icon-cont\"}>\n                  <span className={'edit'} onClick={() => handleEdit(item, index)}>\n                    <FontAwesomeIcon icon={faEdit}/>\n                  </span>\n        <span className=\"remove-item\" onClick={() => deleteItem(index)}>\n                    <FontAwesomeIcon icon={faTrashAlt} />\n                  </span>\n        <div className=\"switch\">\n          <input type=\"checkbox\" defaultChecked={item.isChecked}\n                 onClick={() => checkedItem(item, index)} id={\"isCompleted-\" + index} className={\"switch-input\"} />\n          <label htmlFor={\"isCompleted-\" + index} className=\"switch-label\">Switch</label>\n        </div>\n      </div>\n    )\n  }\n\n  const renderItem = (item, index) => {\n    return (\n      <div key={index} className={'item'}>\n        <div className={'item-left-cont'}>\n          <span className={item.isChecked ? 'number checked' : 'number'}>{index + 1}</span>\n          {!item.isEdit\n            ? <><p className={item.isChecked ? 'checked' : ''}>{item.value}</p> {props.type !== 'standard' ?\n              <p className={\"price\"}>{`${(item.price ? item.price : 0) + ' грн.'}`}</p>: null} </>\n            : <><input type=\"text\" value={newValue} onChange={(event) => setValue(event.target.value)} /> {props.type !== 'standard' ?\n              <input type=\"number\" className={\"edit-price\"} value={newPrice} onChange={(event) => setPrice(event.target.value)} /> : null} </>\n          }\n        </div>\n        {!item.isEdit\n          ? <>\n            {item.isChecked\n              ? <div className={\"icon-cont-small\"}>\n                <span className=\"remove-item\" onClick={() => deleteItem(index)}>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </span>\n                <div className=\"switch\">\n                  <input type=\"checkbox\" defaultChecked={item.isChecked}\n                         onClick={() => checkedItem(item, index)} id={\"isCompleted-\" + index} className={\"switch-input\"} />\n                  <label htmlFor={\"isCompleted-\" + index} className=\"switch-label\">Switch</label>\n                </div>\n              </div>\n              : window.innerWidth > 540 ?\n                <>\n                  {renderMenuItems(item, index)}\n                </>\n                : <>\n                  <span className={\"menu-item\"} onClick={() => itemMenuClick(index)}><FontAwesomeIcon icon={faEllipsisV}/></span>\n                  {(isActiveModuleItemMenu.isActive && isActiveModuleItemMenu.index === index) &&  <div className={\"modal-menu-cont\"}>\n                    {renderMenuItems(item, index)}\n                  </div> }\n                </>\n            }\n          </>\n          : <button className=\"save\" onClick={() => handleEdit(item, index, newValue)}>{TranslatedTexts.saveItemBtn}</button>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className={`items-container  ${props.type !== 'standard' ? 'shopping-list' : ''}`}>\n      {allItems && allItems.map((item, index) => {\n        switch (filterType) {\n          case 'Active':\n            if (!item.isChecked) {\n              return renderItem(item, index)\n            } else {\n              return null\n            }\n          case 'Completed':\n            if (item.isChecked) {\n              return renderItem(item, index)\n            }  else { return null }\n          default:\n            return renderItem(item, index)\n        }\n      })}\n      {props.type !== 'standard' &&\n      <div className=\"total-result\">\n        <span className={\"total-price-label\"}>{TranslatedTexts.totalPriceLabel}:</span>\n        <span className={\"total-price-number\"}>{`${totalPrice(selCourse)}`}</span>\n        <select className=\"courses-money\" onChange={(event) => totalPrice(event.target.value)}>\n          {courses.map((item, index) => {\n            return (\n              <option key={index + 1} value={item.ccy}>\n                {item.ccy}\n              </option>\n            )\n          })}\n        </select>\n      </div>\n      }\n    </div>\n  )\n}\nexport default AllItems;","import React, { useState } from 'react'\nimport './add-item.scss'\nimport { pushStateProp } from '../../actions'\nimport { TranslateTexts } from \"../../constants\"\nimport {useSelector} from \"react-redux\"\n\nconst AddItem = (props) => {\n\n  const TranslatedTexts = TranslateTexts(useSelector((state) => state.tasks.language))\n  // states\n  const itemObj = props.type === 'standard' ? {\n    isEdit: false,\n    isChecked: false,\n    value: '',\n    id: Math.random()\n  } : {\n    isEdit: false,\n    isChecked: false,\n    value: '',\n    price: NaN,\n    id: Math.random()\n  }\n\n  const [item, setItem] = useState(itemObj)\n  const [isError, setError] = useState(false)\n\n  const handleInput = (name, value) => {\n    if (item.value) {\n      setError(false)\n    }\n    setItem({\n      ...item, [name]: value\n    })\n  }\n\n  const handleInputPrice = (name, value) => {\n\n    if (item.value  && item.price) {\n      setError(false)\n    }\n\n    setItem({\n      isEdit: false,\n      isChecked: false,\n      value: '',\n      id: Math.random(),\n      [name]: value\n    })\n  }\n\n  const onClickButton = () => {\n    if (item.value && item.price && props.type !== 'standard') {\n      handleInputPrice('price', '')\n      pushStateProp('shoppingList', item, 'TASKS')\n    } else if (item.value && !item.price && props.type === 'standard') {\n      pushStateProp('tasks', item, 'TASKS')\n      handleInput('value', '')\n    } else {\n      setError(true)\n    }\n  }\n\n  return (\n    <div className={'add-item'}>\n      <div className={props.type === 'standard' ? \"standard\" : \"shopping-list-new\"}>\n        <span>{TranslatedTexts.addItemLabel}: </span>\n        {props.type !== 'standard'\n          ?\n          <>\n            <input type=\"text\" className={isError ? 'error' : ''}\n                   onChange={(event) => handleInput('value', event.target.value)} value={item.value}\n                   placeholder={TranslatedTexts.placeholderName} />\n            <input type=\"number\" className={`${isError ? 'price-input error' : 'price-input'}`} placeholder={TranslatedTexts.placeholderPrice} value={!isNaN(item.price) ? item.price : ''} onChange={(event) => handleInput('price', event.target.value)} />\n          </>\n          :\n          <input type=\"text\" className={isError ? 'error' : ''}\n                 onChange={(event) => handleInput('value', event.target.value)} value={item.value}/>\n        }\n      </div>\n      <button className={'green-button'} onClick={onClickButton}>\n        {TranslatedTexts.addItemBtn}\n      </button>\n    </div>\n\n  );\n}\n\nexport default AddItem;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './filter-link.scss'\nimport { changeStateProp } from '../../actions/'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst FilterLink = (props) => {\n    const filterType = useSelector(state => state.tasks.filterType)\n    const isChecked = filterType === props.buttonType\n\n    const checkPoint = () => {\n        changeStateProp('filterType', props.buttonType, 'TASKS')\n    }\n\n    return (\n        <div className={\"filter-button\"}>\n            <input onChange={checkPoint} checked={isChecked} type=\"radio\" className=\"filter-point\" id={props.buttonType}/>\n            <label htmlFor={props.buttonType} className={isChecked ? \"filter-item-label active\" : \"filter-item-label\"}><FontAwesomeIcon icon={faDotCircle}/>{props.buttonName}</label>\n        </div>\n    )\n}\n\nexport default FilterLink","import React from 'react'\nimport FilterLink from '../FilterLink/filter-link'\nimport './filters-block.scss'\nimport {TranslateTexts} from \"../../constants\";\nimport { useSelector } from \"react-redux\";\n\nconst FiltersBlock = () => {\n  const TranslatedTexts = TranslateTexts(useSelector((state) => state.tasks.language))\n\n    return (\n        <div className={\"filters-blocks\"}>\n          <div className=\"buttons-container\">\n            <FilterLink buttonName={TranslatedTexts.allFilter} buttonType={'All'} />\n            <FilterLink buttonName={TranslatedTexts.activeFilter} buttonType={'Active'} />\n            <FilterLink buttonName={TranslatedTexts.completedFilter} buttonType={'Completed'} />\n          </div>\n        </div>\n    )\n}\n\nexport default FiltersBlock","import React, { memo } from 'react'\nimport './todo.css'\nimport AllItems from '../AllItems/all-item'\nimport AddItem from '../Add-item/add-item'\nimport FiltersBlock from '../FiltersBlock/filters-block'\nimport { Link } from \"react-router-dom\"\nimport { TranslateTexts } from '../../constants'\nimport store from \"../../config/store\";\nimport {useSelector} from \"react-redux\"\n\nconst Todo = memo((props) => {\n  const TranslatedTexts = TranslateTexts(useSelector(state => state.tasks.language))\n\n  return (\n    <div className={\"toto-wrapper\"}>\n      <AddItem type={props.type} />\n      <FiltersBlock/>\n      <AllItems type={props.type} />\n      {props.type === 'standard' ?\n        <Link to={\"/shopping-list\"}>{TranslatedTexts.shoppingListTextLink}</Link>\n        : <Link to={\"/\"}>{TranslatedTexts.todoTextLink}</Link>\n      }\n    </div>\n  )\n})\n\nexport default Todo;","import { instance } from './api'\n\nconst getPeople = async () => {\n  try {\n    const res = await instance.get('/people/')\n    return res.data.results\n  } catch (error) {\n    return error\n  }\n}\n\nexport default {\n  getPeople\n}","import React, { useState, useEffect } from 'react'\nimport getPeople from './../../services/people'\nimport Slider from \"react-slick\"\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport './footer.scss'\n\nconst Footer = () => {\n\n  const [users, setUsers] = useState([])\n\n  let getUsers = async () => {\n    let usersList = await getPeople.getPeople()\n    setUsers(usersList)\n  }\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  let slickSettings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }\n\n  return (\n    <footer>\n      <h4>Users List:</h4>\n      <div className=\"people-test-wrap\">\n        <Slider {...slickSettings}>\n          {users.map((item, index) => {\n            return (\n              <div className={\"user-item\"} key={index + 1}>\n                <p>{`Name: ${item.name}`}</p>\n                <p>{`Skin color: ${item.skin_color}`}</p>\n                <p>{`Mass: ${item.mass}`}</p>\n              </div>\n            )\n          })}\n        </Slider>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport Header from './components/Header/header'\nimport Todo from './components/Todo/todo'\nimport './App.scss'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Footer from './components/Footer/footer'\nimport { TranslateTexts } from \"./constants\"\nimport {useSelector} from \"react-redux\"\n\nfunction App() {\n  const TranslatedTexts = TranslateTexts(useSelector((state) => state.tasks.language))\n\n    return (\n      <div className=\"App\">\n        <Router basename={\"/Todo-by-React-with-hooks/\"}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Header name={TranslatedTexts.todoTitle}/>\n              <Todo type={\"standard\"} />\n            </Route>\n            <Route exact path=\"/shopping-list\">\n              <Header name={TranslatedTexts.shoppingListTitle}/>\n              <Todo type={\"shopping\"} />\n            </Route>\n          </Switch>\n        </Router>\n        <Footer/>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { store } from './config/store'\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}