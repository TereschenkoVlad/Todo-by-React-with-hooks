{"version":3,"sources":["components/Header/header.js","constants/index.js","actions/index.js","reducers/tasks.js","reducers/index.js","config/store.js","components/AllItems/all-item.js","components/Add-item/add-item.js","components/FilterLink/filter-link.js","components/Footer/footer.js","components/Todo/todo.js","services/api.js","services/people.js","components/TestComponent/test-component.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","name","SHOP_LIST","id","value","isEdit","isChecked","price","NaN","CHANGE_STATE_PROP","PUSH_STATE_PROP","SAVE_EDITED_STATE_PROP","SPLICE_STATE_PROP","pushStateProp","prop","reducer","store","dispatch","type","toUpperCase","state","spliceStateProp","saveEditedStateProp","index","itemProp","REDUCER","initialState","tasks","filterType","shoppingList","rootReducer","combineReducers","arguments","length","undefined","action","update","Object","defineProperty","$set","$unshift","$splice","item","newItem","persistConfig","key","storage","persistedReducer","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","AllItems","persistStore","_useState","useState","_useState2","slicedToArray","newValue","setValue","_useState3","_useState4","newPrice","setPrice","_useState5","isActive","_useState6","isActiveModuleItemMenu","setIsActiveModuleItemMenu","storePathCall","allItems","useSelector","deleteItem","handleEdit","forEach","element","i","checkedItem","ind","renderMenuItems","className","onClick","index_es","icon","faEdit","faTrashAlt","defaultChecked","htmlFor","renderItem","Fragment","onChange","event","target","concat","innerWidth","itemMenuClick","faEllipsisV","map","totalResult","itemPrice","parseFloat","totalPrice","AddItem","itemObj","Math","random","setItem","isError","setError","handleInput","objectSpread2","placeholder","isNaN","FilterLink","buttonType","checked","faDotCircle","Footer","FilterLink_filter_link","Todo","memo","Add_item_add_item","Footer_footer","AllItems_all_item","react_router_dom","to","instance","axios","create","baseURL","responseType","people","getPeople","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","get","sent","abrupt","data","results","t0","stop","apply","this","TestComponent","console","log","App","basename","react_router","exact","path","Header_header","Todo_todo","test_component","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6bb63ad.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = (props) => {\n    return (\n        <header>\n            <h1>{props.name}</h1>\n        </header>\n    );\n}\n\nexport default Header;","export const TASKS = [\n    {\n        id: 1,\n        value: 'Learn JS',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 2,\n        value: 'Learn Drupal',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 3,\n        value: 'do nothing',\n        isEdit: false,\n        isChecked: false,\n    },\n    {\n        id: 4,\n        value: 'Learn PHP',\n        isEdit: false,\n        isChecked: false,\n    },\n]\n\nexport const SHOP_LIST = [\n  {\n    id: 1,\n    value: 'Test Shop',\n    isEdit: false,\n    isChecked: false,\n    price: NaN\n  }\n]","import store from \"../config/store\"\nexport const CHANGE_STATE_PROP = '_CHANGE_STATE_PROP'\nexport const PUSH_STATE_PROP = '_PUSH_STATE_PROP'\nexport const SAVE_EDITED_STATE_PROP = '_SAVE_EDITED_STATE_PROP'\nexport const SPLICE_STATE_PROP = '_SPLICE_STATE_PROP'\n\nexport function changeStateProp (prop, value, reducer) {\n    return store.dispatch({\n            type: reducer.toUpperCase() + CHANGE_STATE_PROP,\n            state: {\n                prop: prop,\n                value: value\n            }\n        })\n}\n\nexport function pushStateProp (prop, value, reducer) {\n    return store.dispatch({\n            type: reducer.toUpperCase() + PUSH_STATE_PROP,\n            state: {\n                prop: prop,\n                value: value\n            }\n        })\n}\n\nexport function spliceStateProp (prop, value, reducer) {\n    return store.dispatch({\n        type: reducer.toUpperCase() + SPLICE_STATE_PROP,\n        state: {\n            prop: prop,\n            value: value\n        }\n    })\n}\n\nexport function saveEditedStateProp (prop, value, index, itemProp, reducer) {\n    return store.dispatch({\n        type: reducer.toUpperCase() + SAVE_EDITED_STATE_PROP,\n        state: {\n            prop: prop,\n            value: value,\n            index: index,\n            itemProp: itemProp\n        }\n    })\n}\n","import {TASKS, SHOP_LIST} from '../constants/index'\nimport update from 'immutability-helper'\nimport {CHANGE_STATE_PROP, PUSH_STATE_PROP, SPLICE_STATE_PROP, SAVE_EDITED_STATE_PROP} from '../actions/'\n\nconst REDUCER = 'TASKS'\n\nconst initialState = {\n  tasks: TASKS,\n  filterType: 'All',\n  shoppingList : SHOP_LIST\n}\n\nexport default function tasks(state = initialState, action) {\n  let value = action.state && action.state.value ? action.state.value : ''\n  let prop = action.state && action.state.prop ? action.state.prop : ''\n\n  switch (action.type) {\n    case REDUCER + CHANGE_STATE_PROP:\n      return update(state, {\n        [prop]: {\n          $set: value\n        }\n      })\n    case REDUCER + PUSH_STATE_PROP:\n      return update(state, {\n        [prop]: {$unshift: [value]},\n      })\n    case REDUCER + SPLICE_STATE_PROP:\n      return update(state, {\n        [prop]: {$splice: [[value, 1]]},\n      })\n    case REDUCER + SAVE_EDITED_STATE_PROP:\n      let index = action.state.index\n      let itemProp = action.state.itemProp\n      let item = state[prop][index]\n      let newItem = update(item, {\n        [itemProp]: {$set: value}\n      })\n\n      return update(state, {\n        [prop]: {$splice: [[index, 1, newItem]]},\n      })\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport tasks from './tasks'\n\nconst rootReducer = combineReducers({\n    tasks: tasks,\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from '../reducers'\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n\nexport const persistor = persistStore(store)","import React, {useState} from 'react'\nimport './all-item.scss'\nimport { useSelector } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrashAlt, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport store from \"../../config/store\"\nimport {spliceStateProp, saveEditedStateProp} from '../../actions'\n\nconst AllItems = (props) => {\n\n  const [newValue, setValue] = useState('')\n  const [newPrice, setPrice] = useState(0)\n  const [isActiveModuleItemMenu, setIsActiveModuleItemMenu] = useState({isActive: false, index: NaN})\n\n  let storePathCall = props.type === 'standard' ? state => state.tasks.tasks\n    : state => state.tasks.shoppingList\n  const allItems = useSelector(storePathCall)\n  const filterType = useSelector(state => state.tasks.filterType)\n\n  const deleteItem = (index) => {\n    if (props.type === 'standard') {\n      spliceStateProp('tasks', index, 'TASKS')\n    } else {\n      spliceStateProp('shoppingList', index, 'shoppingList')\n    }\n  }\n\n  const handleEdit = (item, index, newValue) => {\n    allItems.forEach((element, i) => {\n      if (i === index) {\n        element.isEdit = !element.isEdit\n        setValue(item.value)\n        setPrice(item.price)\n        if (newValue && props.type === 'standard') {\n          saveEditedStateProp('tasks', newValue, index, 'value', 'TASKS')\n        } else if (newValue && props.type !== 'standard') {\n          saveEditedStateProp('shoppingList', newValue, index, 'value', 'TASKS')\n        }\n\n        if (newPrice) {\n          saveEditedStateProp('shoppingList', newPrice, index, 'price', 'TASKS')\n        }\n      }\n    })\n  }\n\n  const checkedItem = (item, index) => {\n    allItems.forEach((i, ind) => {\n      if (ind === index) {\n\n        if (props.type === 'standard') {\n          saveEditedStateProp('tasks', !item.isChecked, index, 'isChecked', 'TASKS')\n        } else  {\n          saveEditedStateProp('shoppingList', !item.isChecked, index, 'isChecked', 'TASKS')\n        }\n      }\n    })\n  }\n\n  const itemMenuClick = (index) => {\n    setIsActiveModuleItemMenu({isActive: !isActiveModuleItemMenu.isActive, index: index})\n  }\n\n  const totalPrice = () => {\n    let totalResult = 0\n    allItems.forEach((item) => {\n      let itemPrice = item.price ? item.price : 0\n      switch (filterType) {\n        case 'Active':\n          if (!item.isChecked) {\n            totalResult += parseFloat(itemPrice)\n          }\n          break\n        case 'Completed':\n          if (item.isChecked) {\n            totalResult += parseFloat(itemPrice)\n          }\n          break\n        default:\n          totalResult += parseFloat(itemPrice)\n      }\n    })\n    return totalResult\n  }\n\n  const renderMenuItems = (item, index) => {\n    return (\n      <div className={\"icon-cont\"}>\n                  <span className={'edit'} onClick={() => handleEdit(item, index)}>\n                    <FontAwesomeIcon icon={faEdit}/>\n                  </span>\n        <span className=\"remove-item\" onClick={() => deleteItem(index)}>\n                    <FontAwesomeIcon icon={faTrashAlt} />\n                  </span>\n        <div className=\"switch\">\n          <input type=\"checkbox\" defaultChecked={item.isChecked}\n                 onClick={() => checkedItem(item, index)} id={\"isCompleted-\" + index} className={\"switch-input\"} />\n          <label htmlFor={\"isCompleted-\" + index} className=\"switch-label\">Switch</label>\n        </div>\n      </div>\n    )\n  }\n\n  const renderItem = (item, index) => {\n    return (\n      <div key={index} className={'item'}>\n        <div className={'item-left-cont'}>\n          <span className={item.isChecked ? 'number checked' : 'number'}>{index + 1}</span>\n          {!item.isEdit\n            ? <><p className={item.isChecked ? 'checked' : ''}>{item.value}</p> {props.type !== 'standard' ?\n              <p className={\"price\"}>{`${(item.price ? item.price : 0) + ' грн.'}`}</p>: null} </>\n            : <><input type=\"text\" value={newValue} onChange={(event) => setValue(event.target.value)} /> {props.type !== 'standard' ?\n              <input type=\"number\" className={\"edit-price\"} value={newPrice} onChange={(event) => setPrice(event.target.value)} /> : null} </>\n          }\n        </div>\n        {!item.isEdit\n          ? <>\n            {item.isChecked\n              ? <div className={\"icon-cont-small\"}>\n                <span className=\"remove-item\" onClick={() => deleteItem(index)}>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </span>\n                <div className=\"switch\">\n                  <input type=\"checkbox\" defaultChecked={item.isChecked}\n                         onClick={() => checkedItem(item, index)} id={\"isCompleted-\" + index} className={\"switch-input\"} />\n                  <label htmlFor={\"isCompleted-\" + index} className=\"switch-label\">Switch</label>\n                </div>\n              </div>\n              : window.innerWidth > 540 ?\n                <>\n                  {renderMenuItems(item, index)}\n                </>\n                : <>\n                  <span className={\"menu-item\"} onClick={() => itemMenuClick(index)}><FontAwesomeIcon icon={faEllipsisV}/></span>\n                  {(isActiveModuleItemMenu.isActive && isActiveModuleItemMenu.index === index) &&  <div className={\"modal-menu-cont\"}>\n                    {renderMenuItems(item, index)}\n                  </div> }\n                </>\n            }\n          </>\n          : <button className=\"save\" onClick={() => handleEdit(item, index, newValue)}>Save</button>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className={`items-container  ${props.type !== 'standard' ? 'shopping-list' : ''}`}>\n      {allItems && allItems.map((item, index) => {\n        switch (filterType) {\n          case 'Active':\n            if (!item.isChecked) {\n              return renderItem(item, index)\n            } else {\n              return null\n            }\n          case 'Completed':\n            if (item.isChecked) {\n              return renderItem(item, index)\n            }  else { return null }\n          default:\n            return renderItem(item, index)\n        }\n      })}\n      {props.type !== 'standard' &&\n      <div className=\"total-result\">\n        <span className={\"total-price-label\"}>Total:</span>\n        <span className={\"total-price-number\"}>{`${totalPrice() + ' грн.'}`}</span>\n      </div>\n      }\n    </div>\n  )\n}\nexport default AllItems;","import React, { useState } from 'react';\nimport './add-item.scss'\nimport { pushStateProp } from '../../actions'\n\nconst AddItem = (props) => {\n\n  // states\n  const itemObj = props.type === 'standard' ? {\n    isEdit: false,\n    isChecked: false,\n    value: '',\n    id: Math.random()\n  } : {\n    isEdit: false,\n    isChecked: false,\n    value: '',\n    price: NaN,\n    id: Math.random()\n  }\n\n  const [item, setItem] = useState(itemObj)\n  const [isError, setError] = useState(false)\n\n  const handleInput = (name, value) => {\n    if (item.value) {\n      setError(false)\n    }\n    setItem({\n      ...item, [name]: value\n    })\n  }\n\n  const handleInputPrice = (name, value) => {\n\n    if (item.value  && item.price) {\n      setError(false)\n    }\n\n    setItem({\n      isEdit: false,\n      isChecked: false,\n      value: '',\n      id: Math.random(),\n      [name]: value\n    })\n  }\n\n  const onClickButton = () => {\n    if (item.value && item.price && props.type !== 'standard') {\n      handleInputPrice('price', '')\n      pushStateProp('shoppingList', item, 'TASKS')\n    } else if (item.value && !item.price && props.type === 'standard') {\n      pushStateProp('tasks', item, 'TASKS')\n      handleInput('value', '')\n    } else {\n      setError(true)\n    }\n  }\n\n  return (\n    <div className={'add-item'}>\n      <div className={props.type === 'standard' ? \"standard\" : \"shopping-list-new\"}>\n        <span>New item: </span>\n        {props.type !== 'standard'\n          ?\n          <>\n            <input type=\"text\" className={isError ? 'error' : ''}\n                   onChange={(event) => handleInput('value', event.target.value)} value={item.value}\n                   placeholder={\"Name\"} />\n            <input type=\"number\" className={`${isError ? 'price-input error' : 'price-input'}`} placeholder={\"Price\"} value={!isNaN(item.price) ? item.price : ''} onChange={(event) => handleInput('price', event.target.value)} />\n          </>\n          :\n          <input type=\"text\" className={isError ? 'error' : ''}\n                 onChange={(event) => handleInput('value', event.target.value)} value={item.value}/>\n        }\n      </div>\n      <button className={'green-button'} onClick={onClickButton}>\n        Add +\n      </button>\n    </div>\n\n  );\n}\n\nexport default AddItem;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './filter-link.scss'\nimport { changeStateProp } from '../../actions/'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst FilterLink = (props) => {\n    const filterType = useSelector(state => state.tasks.filterType)\n    const isChecked = filterType === props.buttonType\n\n    const checkPoint = () => {\n        changeStateProp('filterType', props.buttonType, 'TASKS')\n    }\n\n    return (\n        <div className={\"filter-button\"}>\n            <input onChange={checkPoint} checked={isChecked} type=\"radio\" className=\"filter-point\" id={props.buttonType}/>\n            <label htmlFor={props.buttonType} className={isChecked ? \"filter-item-label active\" : \"filter-item-label\"}><FontAwesomeIcon icon={faDotCircle}/>{props.buttonType}</label>\n        </div>\n    )\n}\n\nexport default FilterLink","import React from 'react'\nimport FilterLink from '../FilterLink/filter-link'\nimport './footer.scss'\n\nconst Footer = () => {\n\n    return (\n        <footer className={\"footer\"}>\n          <div className=\"buttons-container\">\n            <FilterLink buttonType={'All'} />\n            <FilterLink buttonType={'Active'} />\n            <FilterLink buttonType={'Completed'} />\n          </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React, { memo } from 'react'\nimport './todo.css'\nimport AllItems from '../AllItems/all-item'\nimport AddItem from '../Add-item/add-item'\nimport Footer from '../Footer/footer'\nimport { Link } from \"react-router-dom\"\n\nconst Todo = memo((props) => {\n\n  return (\n    <div className={\"toto-wrapper\"}>\n      <AddItem type={props.type} />\n      <Footer/>\n      <AllItems type={props.type} />\n      {props.type === 'standard' ?\n        <Link to={\"/shopping-list\"}>Shopping List</Link>\n        : <Link to={\"/\"}>ToDo List</Link>\n      }\n    </div>\n  )\n})\n\nexport default Todo;","import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://swapi.co/api/',\n  responseType: 'json'\n})\n\nexport default instance\n","import axios from './api'\n\nconst getPeople = async () => {\n  try {\n    const res = await axios.get('/people/')\n    return res.data.results\n  } catch (error) {\n    return error\n  }\n}\n\nexport default {\n  getPeople\n}","import React, { memo } from 'react'\nimport getPeople from '../../services/people'\n\nconst TestComponent = memo(() => {\n\n  console.log(getPeople.getPeople());\n\n  return (\n    <div className={\"test-component\"}>\n    </div>\n  )\n})\n\nexport default TestComponent;","import React from 'react'\nimport Header from './components/Header/header'\nimport Todo from './components/Todo/todo'\nimport './App.scss'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport TestComponent from './components/TestComponent/test-component'\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Router basename=\"/\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Header name={\"ToDo On Every Day\"}/>\n              <Todo type={\"standard\"} />\n            </Route>\n            <Route exact path=\"/shopping-list\">\n              <Header name={\"Shopping List On Every Day\"}/>\n              <Todo type={\"shopping\"} />\n            </Route>\n          </Switch>\n        </Router>\n        <TestComponent />\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { store } from './config/store'\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}